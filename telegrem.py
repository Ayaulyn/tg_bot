import telebot
import requests
import webbrowser
import json
from telebot import types

bot = telebot.TeleBot('6937544265:AAFUmvDKLY9NawVkHDC8LU9Rk19Qy0YYP4s')
API='70b8980921062092317bff523be8da7a'


@bot.message_handler(commands=['start'])
def start (message):
    bot.send_message(message.chat.id,'‚õÖ')
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –ø–æ–≥–æ–¥–µ ‚òÄÔ∏è', callback_data='weather'))
    markup.add(types.InlineKeyboardButton('–Ø —Ç—É—Ä–∏—Å—Çü§≥üèõÔ∏è!', callback_data='tourist'))
    markup.add(types.InlineKeyboardButton('–ú–∏–ª—ã–µ –∫–æ—Ç–∏–∫–∏ üíûüíóüíì!', callback_data='cats'))

    bot.register_next_step_handler(message, on_click)
    bot.send_message(message.chat.id,
                     f'–•—ç–π! –Ø Weather bot! üò∂‚Äçüå´.\n'
                     f'–ú–æ—è –º–∏—Å—Å–∏—è —É–≤–µ–¥–æ–º–ª—è—Ç—å –≤–∞—Å –æ –ø–æ–≥–æ–¥–µ –∞ —Ç–∞–∫–∂–µ, –ø–æ–º–æ—â—å —Å –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ–º –≥–æ—Ä–æ–¥–∞, –µ—Å–ª–∏ –≤—ã —Ç—É—Ä–∏—Å—Ç. üß≥ \n'
    f'–Ø –º–æ–≥—Éü¶æ:\n' 
f'1) –†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –ø–æ–≥–æ–¥–µ ‚òÄÔ∏è \n'

f'2) –û–∑–Ω–∞–∫–æ–º–∏—Ç—å —Å –≥–æ—Ä–æ–¥–æ–º,–µ—Å–ª–∏ —Ç—ã —Ç—É—Ä–∏—Å—Ç üèõÔ∏è \n'


f'3) –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–º—ã –ø—Ä–æ –∫–æ—à–µ–∫üíó,\n'
                    ,reply_markup=markup)
    bot.register_next_step_handler(message, on_click)

@bot.callback_query_handler(func=lambda call: True)
def on_click(call):
    if call.data == 'weather':
        bot.send_message(call.message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:)')

    elif call.data == 'tourist':
        bot.send_message(call.message.chat.id, '–õ—É—á—à–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞...')
    elif call.data == 'cats':
        bot.send_message(call.message.chat.id, '–í—Å–µ –±—É–¥–µ—Ç - –ø–æ—Ç–µ—Ä–ø–∏—Ç–µ –Ω–µ–º–Ω–æ–∂–∫–æ')




@bot.message_handler(content_types=['text'])
def get_weather(message):
    city = message.text.strip().lower()
    res=requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric')
    data = json.loads(res.text)
    bot.reply_to(message,f'–û—Ç–ª–∏—á–Ω–æ! –ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å:{data["main"]["temp"]}'f'–≥—Ä–∞–¥—É—Å–∞')








@bot.message_handler(content_types=['photo'])
def get_photo(message):
    markup=types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å –º–Ω–µ —Ç–∞–∫—É—é',url='https://mercedes-benz-astana.kz/'))
    markup.add(types.InlineKeyboardButton('–Ø –±–æ–º–∂', url = 'https://smailiki.ucoz.net/_ph/14/2/6007173.jpg'))
    bot.reply_to(message, '–û—Ö—Ö,—Å–æ—Å–∫–∞', reply_markup=markup)


@bot.message_handler(commands=['moodle'])
def site(message):
    webbrowser.open('https://moodle.astanait.edu.kz/mod/assign/view.php?id=89427')

@bot.message_handler(commands = ['start'])
def main(message):
    bot.send_message(message.chat.id,f'–ü—Ä–∏–≤–µ—Ç,{ message.from_user.first_name} { message.from_user.last_name}')

@bot.message_handler()
def info(message):
    if message.text.lower():
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç,{message.from_user.first_name} {message.from_user.last_name}')
    elif message.text.lower()=='id':
        bot.reply_to(message,f'ID: { message.from_user.id }')


bot.polling(non_stop=True)